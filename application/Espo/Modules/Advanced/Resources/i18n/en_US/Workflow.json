{
    "fields": {
        "Name": "Name",
        "entityType": "Target Entity",
        "type": "Trigger Type",
        "isActive": "Active",
        "description": "Description",
        "usersToMakeToFollow": "Users to make to follow the record",
        "whatToFollow": "What to follow",
        "portalOnly": "Portal Only",
        "portal": "Portal",
        "targetReport": "Target Report",
        "scheduling": "Scheduling",
        "methodName": "Service Method",
        "assignmentRule": "Assignment Rule",
        "targetTeam": "Target Team",
        "targetUserPosition": "Target User Position",
        "listReport": "List Report",
        "linkList": "Link with Target Entity through relationships",
        "linkListShort": "Links",
        "target": "Target",
        "whoFollow": "Who make to follow"
    },
    "links": {
        "portal": "Portal",
        "targetReport": "Target Report",
        "workflowLogRecords": "Log"
    },
    "tooltips": {
        "portalOnly": "If checked workflow will be triggered only in portal.",
        "portal": "Specific portal where workflow will be triggered. Leave empty if you need it to work in any portal.",
        "scheduling": "Crontab notation. Defines frequency of workflow rule runs. UTC timezone.\n\n*/5 * * * * - every 5 minutes\n\n0 */2 * * * - every 2 hours\n\n30 1 * * * - at 01:30 once a day\n\n0 0 1 * * - on the first day of the month"
    },
    "labels": {
        "Create Workflow": "Create Rule",
        "General": "General",
        "Conditions": "Conditions",
        "Actions": "Actions",
        "All": "All",
        "Any": "Any",
        "Formula": "Formula",
        "Email Address": "Email Address",
        "Email Template": "Email Template",
        "From": "From",
        "To": "To",
        "immediately": "Immediately",
        "Reply-To": "Reply-To",
        "later": "Later",
        "today": "now",
        "plus": "plus",
        "minus": "minus",
        "days": "days",
        "hours": "hours",
        "months": "months",
        "minutes": "minutes",
        "Link": "Link",
        "Entity": "Entity",
        "Add Field": "Add Field",
        "equals": "equals",
        "wasEqual": "was equal",
        "notEquals": "not equals",
        "wasNotEqual": "was not equal",
        "changed": "changed",
        "notChanged": "not changed",
        "notEmpty": "not empty",
        "isEmpty": "empty",
        "value": "value",
        "field": "field",
        "true": "true",
        "false": "false",
        "greaterThan": "greater than",
        "lessThan": "less than",
        "greaterThanOrEquals": "greater than or equals",
        "lessThanOrEquals": "less than or equals",
        "between": "between",
        "on": "on",
        "before": "before",
        "after": "after",
        "beforeToday": "before today",
        "afterToday": "after today",
        "recipient": "Recipient",
        "has": "has",
        "notHas": "not has",
        "messageTemplate": "Message Template",
        "users": "Users",
        "Target Entity": "Target Entity",
        "Current": "Current",
        "Workflow": "Workflow",
        "Workflows Log": "Workflows Log",
        "methodName": "Service Method",
        "additionalParameters": "Additional Parameters (JSON format)",
        "doNotStore": "Do not store sent email",
        "Related": "Related",
        "Entity Type": "Entity Type",
        "Workflow Rule": "Workflow Rule",
        "Add Condition": "Add Condition",
        "Add Action": "Add Action",
        "Created": "Created",
        "Field": "Field",
        "Entity": "Entity",
        "Process": "Process"
    },
    "emailAddressOptions": {
        "": "None",
        "currentUser": "Current user",
        "specifiedEmailAddress": "Specified email address",
        "assignedUser": "Assigned user",
        "targetEntity": "Target record",
        "specifiedUsers": "Specified users",
        "specifiedContacts": "Specified contacts",
        "teamUsers": "Users of teams related to target record",
        "followers": "Followers of target record",
        "followersExcludingAssignedUser": "Followers excluding assigned user",
        "specifiedTeams": "Users of specified teams",
        "system": "System",
        "fromOrReplyTo": "From/Reply-To address"
    },
    "options": {
        "type": {
            "afterRecordSaved": "After record saved (created or updated)",
            "afterRecordCreated": "After record created",
            "afterRecordUpdated": "After record updated",
            "scheduled": "Scheduled",
            "sequential": "Sequential"
        },
        "subjectType": {
            "value": "value",
            "field": "field",
            "today": "today/now"
        },
        "assignmentRule": {
            "Round-Robin": "Round-Robin",
            "Least-Busy": "Least-Busy"
        }
    },
    "actionTypes": {
        "sendEmail": "Send Email",
        "createEntity": "Create Record",
        "createRelatedEntity": "Create Related Record",
        "updateEntity": "Update Target Record",
        "updateRelatedEntity": "Update Related Record",
        "relateWithEntity": "Link with Another Record",
        "unrelateFromEntity": "Unlink from Another Record",
        "makeFollowed": "Make Followed",
        "createNotification": "Create Notification",
        "triggerWorkflow": "Trigger Another Workflow Rule",
        "runService": "Run Service Action",
        "applyAssignmentRule": "Apply Assignment Rule",
        "updateCreatedEntity": "Update Created Record",
        "updateProcessEntity": "Update Process Record"
    },
    "texts": {
        "allMustBeMet": "All must be met",
        "atLeastOneMustBeMet": "At least one must be met",
        "formulaInfo": "Conditions of any complexity in espo-formula language"
    },
    "messages": {
        "loopNotice": "Be careful about a possible looping through two or more workflow rules continuously.",
        "messageTemplateHelpText": "Available variables:\n{entity} - target record,\n{user} - current user."
    },
    "serviceActions": {
        "sendEventInvitations": "Send Invitations",
        "addQuoteItemList": "Add Quote Items"
    },
    "serviceActionsHelp": {
        "addQuoteItemList": "Example: <br><code>{<br>&nbsp;&nbsp;\"itemList\": [<br>&nbsp;&nbsp;&nbsp;&nbsp;{\"quantity\": 1, \"procuctId\": \"productId\", \"name\": \"Product Name\", \"listPrice\": 100, \"unitPrice\": 100}<br>&nbsp;&nbsp;]<br>}"
    }
}